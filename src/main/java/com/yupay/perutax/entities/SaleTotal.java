/*
 *  Perutax - Taxation software for Peru.
 *     Copyright (C) 2021-2022  Ingenieria Informatica Yupay SACS
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

package com.yupay.perutax.entities;

import jakarta.persistence.*;
import javafx.beans.property.LongProperty;
import javafx.beans.property.ObjectProperty;
import javafx.beans.property.SimpleLongProperty;
import javafx.beans.property.SimpleObjectProperty;

import java.math.BigDecimal;
import java.util.Objects;
/**
 * This entity represents each item in the total
 * footer of a sale folio.
 *
 * @author InfoYupay SACS
 * @version 1.0
 */
@Entity
@Table(name = "sale_total", schema = "public")
public class SaleTotal {
    /**
     * Autogenerated ID by sequence.
     */
    private final LongProperty id =
            new SimpleLongProperty(this, "id");
    /**
     * Type of total.
     */
    private final ObjectProperty<SaleTotalClass> type =
            new SimpleObjectProperty<>(this, "type");
    /**
     * The total amount (folio currency).
     */
    private final ObjectProperty<BigDecimal> amountFC =
            new SimpleObjectProperty<>(this, "amountFC", new BigDecimal("0.00"));
    /**
     * The total amount (system currency).
     */
    private final ObjectProperty<BigDecimal> amountSC =
            new SimpleObjectProperty<>(this, "amountSC", new BigDecimal("0.00"));
    /**
     * The owner (parent) sale entry.
     */
    private final ObjectProperty<Sale> owner =
            new SimpleObjectProperty<>(this, "owner");

    /**
     * Public accessor - getter.
     *
     * @return value of {@link #id}
     */
    @GeneratedValue(strategy = GenerationType.SEQUENCE,
            generator = "sq_saleTotalID")
    @SequenceGenerator(name = "sq_saleTotalID",
            schema = "public",
            sequenceName = "sq_sale_total_id",
            allocationSize = 1)
    @Id
    @Column(name = "id", nullable = false)
    public long getId() {
        return id.get();
    }

    /**
     * Public accessor - setter.
     *
     * @param id value to set into {@link #id}
     */
    public void setId(long id) {
        this.id.set(id);
    }

    /**
     * Public accessor - getter.
     *
     * @return value of {@link #type}
     */
    @Basic
    @Column(name = "type", nullable = false)
    @Enumerated(EnumType.STRING)
    public SaleTotalClass getType() {
        return type.get();
    }

    /**
     * Public accessor - setter.
     *
     * @param type value to set into {@link #type}
     */
    public void setType(SaleTotalClass type) {
        this.type.set(type);
    }

    /**
     * Public accessor - getter.
     *
     * @return value of {@link #amountFC}
     */
    @Basic
    @Column(name = "amount_fc", nullable = false, precision = 14, scale = 2)
    public BigDecimal getAmountFC() {
        return amountFC.get();
    }

    /**
     * Public accessor - setter.
     *
     * @param amountFC value to set into {@link #amountFC}
     */
    public void setAmountFC(BigDecimal amountFC) {
        this.amountFC.set(amountFC);
    }

    /**
     * Public accessor - getter.
     *
     * @return value of {@link #amountSC}
     */
    @Basic
    @Column(name = "amount_sc", nullable = false, precision = 14, scale = 2)
    public BigDecimal getAmountSC() {
        return amountSC.get();
    }

    /**
     * Public accessor - setter.
     *
     * @param amountSC value to set into {@link #amountSC}
     */
    public void setAmountSC(BigDecimal amountSC) {
        this.amountSC.set(amountSC);
    }

    /**
     * Public accessor - getter.
     *
     * @return value of {@link #owner}
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "owner")
    public Sale getOwner() {
        return owner.get();
    }

    /**
     * Public accessor - setter.
     *
     * @param owner value to set into {@link #owner}
     */
    public void setOwner(Sale owner) {
        this.owner.set(owner);
    }

    /**
     * JavaFX accessor - property.
     *
     * @return the property {@link #id}
     */
    public LongProperty idProperty() {
        return id;
    }

    /**
     * JavaFX accessor - property.
     *
     * @return the property {@link #type}
     */
    public ObjectProperty<SaleTotalClass> typeProperty() {
        return type;
    }

    /**
     * JavaFX accessor - property.
     *
     * @return the property {@link #amountFC}
     */
    public ObjectProperty<BigDecimal> amountFCProperty() {
        return amountFC;
    }

    /**
     * JavaFX accessor - property.
     *
     * @return the property {@link #amountSC}
     */
    public ObjectProperty<BigDecimal> amountSCProperty() {
        return amountSC;
    }

    /**
     * JavaFX accessor - property.
     *
     * @return the property {@link #owner}
     */
    public ObjectProperty<Sale> ownerProperty() {
        return owner;
    }

    @Override
    public boolean equals(Object o) {
        return o instanceof SaleTotal saleTotal &&
                Objects.equals(getId(), saleTotal.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}
