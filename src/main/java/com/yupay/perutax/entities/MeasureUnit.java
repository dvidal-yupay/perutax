/*
 *  Perutax - Taxation software for Peru.
 *     Copyright (C) 2021-2022  Ingenieria Informatica Yupay SACS
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

package com.yupay.perutax.entities;

import jakarta.persistence.*;
import javafx.beans.property.BooleanProperty;
import javafx.beans.property.SimpleBooleanProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.beans.property.StringProperty;
import org.eclipse.persistence.annotations.UuidGenerator;

import java.util.Objects;

/**
 * This entity represents a measurement unit.
 *
 * @author InfoYupay SACS
 * @version 1.0
 */
@Entity
@Table(name = "m_unit", schema = "public")
public class MeasureUnit {
    /**
     * The autogenerated ID.
     */
    private final StringProperty id =
            new SimpleStringProperty(this, "id");
    /**
     * Name (short and brief) of the unit.
     */
    private final StringProperty name =
            new SimpleStringProperty(this, "name");
    /**
     * The taxID (as defined by SUNAT specifications).
     */
    private final StringProperty taxId =
            new SimpleStringProperty(this, "taxId");
    /**
     * Symbol of the unit. (ie: kg for kilograms).
     */
    private final StringProperty symbol =
            new SimpleStringProperty(this, "symbol");
    /**
     * Trash flag: since the measurement units cannot be physically
     * deleted due realtaionships, this flag is used as a discriminator.
     * If such a flag is true, the entity should be treated as if deleted.
     */
    private final BooleanProperty trash =
            new SimpleBooleanProperty(this, "trash");

    /**
     * Public accessor - getter.
     *
     * @return value of {@link #id}
     */
    @GeneratedValue(generator = "uuid_munit_id")
    @UuidGenerator(name = "uuid_munit_id")
    @Id
    @Column(name = "id", nullable = false, length = 36)
    public String getId() {
        return id.get();
    }

    /**
     * Public accessor - setter.
     *
     * @param id value to set into {@link #id}
     */
    public void setId(String id) {
        this.id.set(id);
    }

    /**
     * Public accessor - getter.
     *
     * @return value of {@link #name}
     */
    @Basic
    @Column(name = "name", nullable = false, length = -1)
    public String getName() {
        return name.get();
    }

    /**
     * Public accessor - setter.
     *
     * @param name value to set into {@link #name}
     */
    public void setName(String name) {
        this.name.set(name);
    }

    /**
     * Public accessor - getter.
     *
     * @return value of {@link #taxId}
     */
    @Basic
    @Column(name = "tax_id", nullable = false, length = 3)
    public String getTaxId() {
        return taxId.get();
    }

    /**
     * Public accessor - setter.
     *
     * @param taxId value to set into {@link #taxId}
     */
    public void setTaxId(String taxId) {
        this.taxId.set(taxId);
    }

    /**
     * Public accessor - getter.
     *
     * @return value of {@link #symbol}
     */
    @Basic
    @Column(name = "symbol", nullable = false, length = 6)
    public String getSymbol() {
        return symbol.get();
    }

    /**
     * Public accessor - setter.
     *
     * @param symbol value to set into {@link #symbol}
     */
    public void setSymbol(String symbol) {
        this.symbol.set(symbol);
    }

    /**
     * Public accessor - getter.
     *
     * @return value of {@link #trash}
     */
    @Basic
    @Column(name = "trash", nullable = false)
    public boolean isTrash() {
        return trash.get();
    }

    /**
     * Public accessor - setter.
     *
     * @param trash value to set into {@link #trash}
     */
    public void setTrash(boolean trash) {
        this.trash.set(trash);
    }

    /**
     * Public FX accessor - property.
     *
     * @return the property {@link #id}
     */
    public StringProperty idProperty() {
        return id;
    }

    /**
     * Public FX accessor - property.
     *
     * @return the property {@link #name}
     */
    public StringProperty nameProperty() {
        return name;
    }

    /**
     * Public FX accessor - property.
     *
     * @return the property {@link #taxId}
     */
    public StringProperty taxIdProperty() {
        return taxId;
    }

    /**
     * Public FX accessor - property.
     *
     * @return the property {@link #symbol}
     */
    public StringProperty symbolProperty() {
        return symbol;
    }

    /**
     * Public FX accessor - property.
     *
     * @return the property {@link #trash}
     */
    public BooleanProperty trashProperty() {
        return trash;
    }

    @Override
    public boolean equals(Object o) {
        return o instanceof MeasureUnit that &&
                Objects.equals(getId(), that.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}
